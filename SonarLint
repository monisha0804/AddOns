SONAR-LINT :
	* free ide plugin for clean code
	* on-the-fly analysis of code on new bugs and quality issue injected into the code
	* it is not for compilation error, it is used to find out bugs that might be there during run time, even without executing the program
					- so it is called as static code analyzer 
					- will say the complete description of the issue and will also give the description on how to fix the issue
					- good quality code
					
					
Installation:

	1. open the ide
	2. Help -> eclipse marketplace 
	3. Search for sonarlint -> GO
	4. Install sonar lint 
	
JACOCO:
	*JaCoCo is a free code coverage library for Java, which has been created by the EclEmma team based on the 
	   lessons learned from using and integration existing libraries for many years.

Installation:

	1. open the ide
	2. Help -> eclipse marketplace 
	3. Search for EclEmma -> GO
	4. Install JACOCO 
	
	
SONAR-QUBE:
	
	*Sonarqube is for continuous inspection of code quality to perform automatic reviews with static analysis of code to detect bugs,
		code smells, and security vulnerabilities on 20+ programming languages.
	*open source server for code quality checking
	*checks for quality bugs and vulnerability in code


Installation: 

	*Download the zip file and extract it
	// in case of jdk issues, take the location of jdk and put that in place of "java" in "wrapper.conf" file(does'nt exist in latest versions)
	*go to sonarqube -> bin -> windows-x86-64 
	*start the cmd prompt from the above location
	*type "StartSonar" in cmd 
	
	In browser: localhost:9000
	
	LOGIN CREDENTIALS:
			Username: admin
			password : admin  -- monisha@Om0804
		
		Then, the change password page will open and so change it and use it in further cases. 

	
SONAR-QUBE IN STS:
			
				*Add pom files for sonarqube and jacoco
				
   POM PLUGINS: 
		<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		  <plugin>
		        <groupId>org.sonarsource.scanner.maven</groupId>
		        <artifactId>sonar-maven-plugin</artifactId>
		        <version>3.7.0.1746</version>
      </plugin>
         <plugin>
			      <groupId>org.jacoco</groupId>
    <artifactId>jacoco-maven-plugin</artifactId>
    <version>0.8.8</version>
			      <executions>
			      	<execution>
			      		<id> prepare-agent</id> 
			  		<goals>
			      			<goal>prepare-agent</goal>
			      		</goals>
			      </execution>
			      <execution>
			      	<id> report </id>
			      	<goals>
			      		<goal>report</goal>
			      	</goals>
			      </execution>
			      </executions>
      </plugin>
	  
			
			*right click on project -> maven -> update project-> forceful update
			*right click ->run as ->  maven build -> goals -> clean org.jacoco:jacoco-maven-plugin:prepare-agent install -> apply -> run -> BUILD SUCCESS
			*right click -> REFRESH 
			*check for files under TARGET -> site -> JACOCO files
			
SONAR-QUBE DASHBOARD: 

		*Need to generate token for project 
		*open administrator -> my account -> security -> enter token name and type( global token ) -> GENERATE
		
		GENERATED TOKEN : sqa_62eb82858d30bd176e5f8a15e9f7efab9a476887
			
	sonar:sonar -Dsonar.login=sqa_62eb82858d30bd176e5f8a15e9f7efab9a476887
	
STS: 
	*right click on project name -> run as-> maven build(2nd maven build) -> goals -> sonar:sonar -Dsonar.login=sqa_62eb82858d30bd176e5f8a15e9f7efab9a476887
					-> apply -> run -> BUILD SUCCESS
					
	*REFRESH 
	
SONAR-QUBE DASHBOARD:

	*PROJECTS
	*Click on project name
	
	
STS:
 Any changes in sts, 
				*changes in code(bug fixing) - maven build -> run sonar 
				*adding lines in code - maven build -> run jacoco and run sonar  